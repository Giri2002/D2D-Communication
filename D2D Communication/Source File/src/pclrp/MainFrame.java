/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pclrp;
import java.awt.BorderLayout;
import java.awt.Color;
import java.io.File;
import java.io.FileInputStream;
import java.util.ArrayList;
import javax.swing.JPanel;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.util.Random;


/**
 *
 * @author admin
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    Details dt=new Details();
    Parameters pm=new Parameters();
    
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder()));

        jLabel1.setFont(new java.awt.Font("Andalus", 0, 30)); // NOI18N
        jLabel1.setText("Priority-based Cross Layer Routing Protocol");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(303, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(272, 272, 272))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jSplitPane1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jButton1.setFont(new java.awt.Font("Andalus", 0, 17)); // NOI18N
        jButton1.setText("Create Network");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Andalus", 0, 17)); // NOI18N
        jButton2.setText("Sense Data");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Andalus", 0, 17)); // NOI18N
        jButton3.setText("Intra Routing");
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Andalus", 0, 17)); // NOI18N
        jButton4.setText("Extra Routing");
        jButton4.setEnabled(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Andalus", 0, 17)); // NOI18N
        jButton5.setText("Performance");
        jButton5.setEnabled(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jButton1)
                .addGap(45, 45, 45)
                .addComponent(jButton2)
                .addGap(56, 56, 56)
                .addComponent(jButton3)
                .addGap(48, 48, 48)
                .addComponent(jButton4)
                .addGap(50, 50, 50)
                .addComponent(jButton5)
                .addContainerGap(149, Short.MAX_VALUE))
        );

        jSplitPane1.setLeftComponent(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSplitPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSplitPane1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try
        {
            File fe=new File(dt.node_path);
            FileInputStream fis=new FileInputStream(fe);
            byte bt[]=new byte[fis.available()];
            fis.read(bt);
            fis.close();

            String g=new String(bt).trim();
            String g1[]=g.split("\n");

            dt.NodeNames=new ArrayList();
            dt.no_nodes=g1.length;
            
            dt.nodePos=new double[dt.no_nodes][2];
            dt.nodeType=new String[dt.no_nodes];           
                       
            
            for(int i=0;i<g1.length;i++)
            {                                
                dt.nodeList.add(g1[i].trim());
                String g2[]=g1[i].trim().split("#");
                dt.nodePos[i][0]=Integer.parseInt(g2[0]);
                dt.nodePos[i][1]=Integer.parseInt(g2[1]);
                dt.nodeType[i]=g2[2];
                dt.NodeNames.add(g2[2]);
                if(g2[2].startsWith("C"))
                {
                    dt.coordList.add(g2[2]);
                    dt.Coord++;
                }
                
                if(g2[2].startsWith("G"))
                {
                    dt.gwList.add(g2[2]);
                    dt.GW++;
                }
            }

            dt.CLS=new ArrayList[dt.Coord];
            dt.Nodes=new String[dt.Coord*6][3];
            dt.Node_Data=new String[dt.Coord*6][5];
            dt.Node_Beacon=new Boolean[dt.Coord*6];
            dt.Node_NextHop=new String[dt.Coord*6][2];
            dt.cordInfo=new String[dt.Coord][2];
            
            
            
            int k=0;
            for(int i=0;i<dt.Coord;i++)
            {
                dt.cordInfo[i][0]=dt.coordList.get(i).toString(); // co name
                dt.cordInfo[i][1]=String.valueOf(pm.Coordinator_Init_energy); // co init eng
                
                ArrayList at=new ArrayList();
                for(int j=0;j<6;j++)
                {
                    String nn="N"+(i+1)+dt.name1[j];
                    String m1=(k+1)+"#"+nn;
                    at.add(m1);
                    dt.Nodes[k][0]=String.valueOf(k+1); // node id
                    dt.Nodes[k][1]=nn; // node name
                    dt.Nodes[k][2]=dt.coordList.get(i).toString(); // coordinator name
                    dt.ndList.add(nn);
                    dt.Node_Data[k][0]="";
                    dt.Node_Data[k][1]="";
                    dt.Node_Data[k][2]=String.valueOf(pm.Sensor_Init_energy);
                    dt.Node_Data[k][3]="";
                    dt.Node_Data[k][4]="0";
                    dt.Node_Beacon[k]=false;
                    k++;
                }
                dt.CLS[i]=at;
            }
            
            
            File fe2=new File(dt.link_path);
            FileInputStream fis2=new FileInputStream(fe2);
            byte bt2[]=new byte[fis2.available()];
            fis2.read(bt2);
            fis2.close();

            String g2=new String(bt2).trim();
            String g3[]=g2.split("\n");
            
            dt.linkPos=new double[g3.length][4];
             
            for(int i=0;i<g3.length;i++)
            {                                
                dt.nodeLink.add(g3[i].trim());
                String g4[]=g3[i].trim().split("#");
                int ind1=dt.NodeNames.indexOf(g4[0]);
                int ind2=dt.NodeNames.indexOf(g4[1]);
                
                int mi=dt.ndList.indexOf(g4[0]);
                
                if(g4[0].startsWith("N")&&g4[1].startsWith("N"))
                {
                    dt.Node_NextHop[mi][0]=g4[1];
                    dt.Node_NextHop[mi][1]="RD"; // relayed node
                }
                if(g4[0].startsWith("N")&&g4[1].startsWith("C"))
                {
                    dt.Node_NextHop[mi][0]=g4[1];
                    dt.Node_NextHop[mi][1]="RG"; // relaying node
                }
                    
                dt.linkPos[i][0]=dt.nodePos[ind1][0];
                dt.linkPos[i][1]=dt.nodePos[ind1][1];
                dt.linkPos[i][2]=dt.nodePos[ind2][0];
                dt.linkPos[i][3]=dt.nodePos[ind2][1];
            }
            
            
            
            
            JPanel rightComponent1=new JPanel(new BorderLayout());

            rightComponent1.add(BorderLayout.CENTER,new DisplayNodes(dt.no_nodes,dt.NodeNames,jSplitPane1));
            rightComponent1.setBackground(Color.white);
            jSplitPane1.setRightComponent(rightComponent1);

            jButton1.setEnabled(false);
            jButton2.setEnabled(true);
            
            double bc1=Math.pow(2,pm.Backoffexponent+1)-1;
            double bc2=Math.pow(2,pm.Backoffexponent+2)-1;
            double bc3=Math.pow(2,pm.Backoffexponent+3)-1;
            
            System.out.println(bc1+" : "+bc2+" : "+bc3);
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try
        {
            // Sense Data
            
            for(int i=0;i<dt.Coord;i++)
            {
                CoordReceiver cr=new CoordReceiver((i+1),dt.coordList.get(i).toString());
                cr.start();
            }            
            
            
            for(int i=0;i<dt.Nodes.length;i++)
            {
                NodeReceiver nr=new NodeReceiver(Integer.parseInt(dt.Nodes[i][0]),dt.Nodes[i][1],dt.Nodes[i][2]);
                nr.start();
            }
            
            // coordinator send beacon
         /*   DatagramSocket ds=new DatagramSocket();
            
           for(int i=0;i<dt.Nodes.length;i++)
           {
               long tm1=System.currentTimeMillis();
               String ms="Beacon1#"+tm1;
               byte bt[]=ms.getBytes();
               
               int pt=Integer.parseInt(dt.Nodes[i][0])+7000;
               DatagramPacket dp=new DatagramPacket(bt,0,bt.length,InetAddress.getByName("127.0.0.1"),pt);
               ds.send(dp);               
               
           }
        */
            dt.sense=true;
            JPanel rightComponent1=new JPanel(new BorderLayout());
            rightComponent1.add(BorderLayout.CENTER,new DisplayNodes(dt.no_nodes,dt.NodeNames,jSplitPane1));
            rightComponent1.setBackground(Color.white);
            jSplitPane1.setRightComponent(rightComponent1);
                                   
            
            jButton2.setEnabled(false);
            jButton3.setEnabled(true);
            jButton4.setEnabled(true);
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try
        {
            // Intra routing
            dt.intra=true;
            
            for(int i=0;i<dt.Node_Beacon.length;i++)
            {
                String nxtH1="";
                if(dt.Node_Beacon[i]) // if node j receive beacon
                {
                    
                    if(dt.Node_NextHop[i][1].equals("RG"))
                        nxtH1=dt.Node_NextHop[i][0];                            
                }
                else
                {                    
                    String g1= dt.Node_NextHop[i][0];
                    int ind1=dt.ndList.indexOf(g1);
                   
                }
                    
            }
            
            JPanel rightComponent1=new JPanel(new BorderLayout());
            rightComponent1.add(BorderLayout.CENTER,new DisplayNodes(dt.no_nodes,dt.NodeNames,jSplitPane1));
            rightComponent1.setBackground(Color.white);
            jSplitPane1.setRightComponent(rightComponent1);
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        try
        {
            // extra routing
            
            for(int i=0;i<dt.NodeNames.size();i++)
            {
                String n1=dt.NodeNames.get(i).toString();
                if(n1.startsWith("C"))
                {
                    double x1=dt.nodePos[i][0];
                    double y1=dt.nodePos[i][1]; 
                    
                    double min=Double.MAX_VALUE;
                    String sel="";
                    for(int j=0;j<dt.NodeNames.size();j++)
                    {
                        String n2=dt.NodeNames.get(j).toString();
                        if(n2.startsWith("G"))
                        {
                            double x2=dt.nodePos[j][0];
                            double y2=dt.nodePos[j][1]; 
                            double d1=(x2-x1)*(x2-x1);
                            double d2=(y2-y1)*(y2-y1);
                            double dis1=Math.sqrt(d1+d2);
                            if(min>dis1)
                            {
                                min=dis1;
                                sel=n2;
                            }
                        }                            
                    }
                   
                    double RTT=0;
                    if(min>=pm.Max_RTT)
                        RTT=0;
                    if(pm.AVG_RTT <=min && min< pm.Max_RTT)
                        RTT=0.5;
                    if(pm.Min_RTT <= min && min < pm.AVG_RTT)
                        RTT=0.75;
                    if(min < pm.Min_RTT)
                        RTT=1;
                    
                    Random rn=new Random();
                    int dir=rn.nextInt(1);
                    int t1=rn.nextInt(dt.confid.length);
                    double sec=dt.confid[t1];
                    double GCF = pm.alpha*sec + pm.beta*RTT+ pm.gammma*dir;
                    dt.gwLink.add(sel+"#"+n1+"#"+min+"#"+RTT+"#"+dir+"#"+sec+"#"+GCF);
                    System.out.println("selected "+sel +" : "+n1+" : "+GCF);
                }
            }
            JPanel rightComponent1=new JPanel(new BorderLayout());
            rightComponent1.add(BorderLayout.CENTER,new DisplayNodes(dt.no_nodes,dt.NodeNames,jSplitPane1));
            rightComponent1.setBackground(Color.white);
            jSplitPane1.setRightComponent(rightComponent1);
            
            jButton5.setEnabled(true);
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        try
        {
            double eng1[]=new double[dt.cordInfo.length];
            double delay1[]=new double[dt.cordInfo.length];
            double pdr1[]=new double[dt.cordInfo.length];
            for(int i=0;i<dt.cordInfo.length;i++)
            {
                
                double sm1=0;
                double m1=0;
                double sm2=0;
                double m2=0;
                for(int j=0;j<dt.Nodes.length;j++)
                {
                    if(dt.cordInfo[i][0].equals(dt.Nodes[j][2]))
                    {
                        m1++;
                        sm1=sm1+Double.parseDouble(dt.Node_Data[j][2]);                        
                        sm2=sm2+Double.parseDouble(dt.Node_Data[j][3]); 
                        m2=m2+Double.parseDouble(dt.Node_Data[j][4]); 
                    }
                }
                sm1=sm1/m1;
                sm2=sm2/m1;
                double en=Double.parseDouble(dt.cordInfo[i][1])-sm1;
                eng1[i]=en;
                delay1[i]=sm2;
                pdr1[i]=(m2/6)*100;
                System.out.println("m2 "  +m2);
                //System.out.println(dt.cordInfo[i][0]+" : "+dt.cordInfo[i][1]+" : "+sm);
            }
            Graph1 gr1=new Graph1();
            gr1.displayGraph1(eng1);
            gr1.displayGraph2(delay1);
            gr1.displayGraph3(pdr1);
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
                    
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSplitPane jSplitPane1;
    // End of variables declaration//GEN-END:variables
}
